{
  "version": 3,
  "sources": ["../../../src/fn/move-to.ts"],
  "sourcesContent": ["import * as d3 from 'd3';\nimport { Renderer } from '../core';\nimport { INode, D3SelectionINode } from '../types';\n\n/**\n * Centralize provided node in the SVG canvas\n *\n * FIXME: need offset multiplier depending on how nodes are drawn\n *\n * @param {string} nodeId - id\n * @param {number} duration - animation transition time in millis\n *\n * See: https://observablehq.com/@d3/programmatic-zoom\n */\nexport const moveTo = <V, E>(\n  G: Renderer<V, E>,\n  node: D3SelectionINode<V>,\n  duration: number\n): void => {\n  const chart = G.chart;\n  const chartSize = G.chartSize;\n  const svg = d3.select(G.svgEl);\n  const width = G.graph.width < chartSize.width ? chartSize.width : G.graph.width;\n  const height = G.graph.height < chartSize.height ? chartSize.height : G.graph.height;\n\n\n  // t.k = scale, t.x = translateX, t.y = translateY\n  const t = d3.zoomTransform(chart.node() as Element);\n\n  // const node = flatten(G.layout).nodes.find(n => n.id === nodeId);\n  if (!node) return;\n\n  const parentMap = G.parentMap;\n\n  let temp = node.datum() as INode<V>;\n  const nodeWidth = temp.width;\n  const nodeHeight = temp.height;\n  let globalX = temp.x;\n  let globalY = temp.y;\n\n  while (parentMap.has(temp.id) === true) {\n    temp = parentMap.get(temp.id);\n    globalX += temp.x;\n    globalY += temp.y;\n  }\n\n  const dx = globalX + 0.5 * nodeWidth;\n  const dy = globalY + 0.5 * nodeHeight;\n\n  svg.transition().duration(duration).call(\n    G.zoom.transform,\n    d3.zoomIdentity.translate(0, 0).scale(t.k).translate(\n      -dx + (0.5 * width) / t.k,\n      -dy + (0.5 * height) / t.k\n    )\n  );\n};\n\nexport const moveToLabel = <V, E>(\n  G: Renderer<V, E>,\n  label: string,\n  duration: number\n): void => {\n  const chart = G.chart;\n  const node = chart.selectAll('.node').filter((d: INode<V>) => d.label === label);\n  if (!node) return;\n  moveTo(G, node as D3SelectionINode<V>, duration);\n};\n"],
  "mappings": ";AAAA;AAAA;AAAA;AAAA;AAAA;AAcO,IAAM,SAAS,CACpB,GACA,MACA,aACS;AACT,QAAM,QAAQ,EAAE;AAChB,QAAM,YAAY,EAAE;AACpB,QAAM,MAAM,AAAG,OAAO,EAAE;AACxB,QAAM,QAAQ,EAAE,MAAM,QAAQ,UAAU,QAAQ,UAAU,QAAQ,EAAE,MAAM;AAC1E,QAAM,SAAS,EAAE,MAAM,SAAS,UAAU,SAAS,UAAU,SAAS,EAAE,MAAM;AAI9E,QAAM,IAAI,AAAG,cAAc,MAAM;AAGjC,MAAI,CAAC;AAAM;AAEX,QAAM,YAAY,EAAE;AAEpB,MAAI,OAAO,KAAK;AAChB,QAAM,YAAY,KAAK;AACvB,QAAM,aAAa,KAAK;AACxB,MAAI,UAAU,KAAK;AACnB,MAAI,UAAU,KAAK;AAEnB,SAAO,UAAU,IAAI,KAAK,QAAQ,MAAM;AACtC,WAAO,UAAU,IAAI,KAAK;AAC1B,eAAW,KAAK;AAChB,eAAW,KAAK;AAAA;AAGlB,QAAM,KAAK,UAAU,MAAM;AAC3B,QAAM,KAAK,UAAU,MAAM;AAE3B,MAAI,aAAa,SAAS,UAAU,KAClC,EAAE,KAAK,WACP,AAAG,aAAa,UAAU,GAAG,GAAG,MAAM,EAAE,GAAG,UACzC,CAAC,KAAM,MAAM,QAAS,EAAE,GACxB,CAAC,KAAM,MAAM,SAAU,EAAE;AAAA;AAKxB,IAAM,cAAc,CACzB,GACA,OACA,aACS;AACT,QAAM,QAAQ,EAAE;AAChB,QAAM,OAAO,MAAM,UAAU,SAAS,OAAO,CAAC,MAAgB,EAAE,UAAU;AAC1E,MAAI,CAAC;AAAM;AACX,SAAO,GAAG,MAA6B;AAAA;",
  "names": []
}
