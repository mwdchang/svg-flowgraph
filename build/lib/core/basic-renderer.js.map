{
  "version": 3,
  "sources": ["../../../src/core/basic-renderer.ts"],
  "sourcesContent": ["import * as d3 from 'd3';\nimport { Renderer } from './renderer';\nimport { translate } from '../utils/svg-util';\nimport { INode, D3Selection, D3SelectionINode, D3SelectionIEdge } from '../types';\n\nexport abstract class BasicRenderer<V, E> extends Renderer<V, E> {\n  /**\n   * Basic nodes setup - redraws everything and invoke callback\n  */\n  setupNodes(): void {\n    const chart = this.chart.select('.nodes-layer');\n    chart.selectAll('*').remove();\n\n    const _recursiveBuild = (selection: D3Selection, childrenNodes: INode<V>[]) => {\n      if (!childrenNodes) return;\n      const nodesGroup = selection.selectAll('.node')\n        .data(childrenNodes)\n        .enter().append('g')\n        .classed('node', true)\n        .attr('transform', d => {\n          return translate(d.x, d.y);\n        });\n\n      nodesGroup.each(function(d) {\n        const s = d3.select(this);\n        s.append('g').classed('node-ui', true);\n        _recursiveBuild(s.append('g'), d.nodes);\n      });\n    };\n    _recursiveBuild(chart, this.graph.nodes);\n    this.renderNodes(chart.selectAll('.node-ui') as D3SelectionINode<V>);\n  }\n\n  /**\n   * Basic edge setup - redraws everything and invoke callback\n  */\n  setupEdges(): void {\n    const chart = this.chart;\n    chart.selectAll('.edge').remove();\n\n    const edges = this.graph.edges;\n\n    chart.selectAll('.edge')\n      .data(edges)\n      .enter()\n      .append('g')\n      .classed('edge', true);\n\n    this.renderEdges(chart.selectAll('.edge') as D3SelectionIEdge<E>);\n  }\n\n  abstract renderNodes(selection: D3SelectionINode<V>): void;\n  abstract renderEdges(selection: D3SelectionIEdge<E>): void;\n}\n"],
  "mappings": ";AAAA;AAAA;AAAA;AACA;AACA;AAGO,kCAA2C,SAAe;AAAA,EAI/D,aAAmB;AACjB,UAAM,QAAQ,KAAK,MAAM,OAAO;AAChC,UAAM,UAAU,KAAK;AAErB,UAAM,kBAAkB,CAAC,WAAwB,kBAA8B;AAC7E,UAAI,CAAC;AAAe;AACpB,YAAM,aAAa,UAAU,UAAU,SACpC,KAAK,eACL,QAAQ,OAAO,KACf,QAAQ,QAAQ,MAChB,KAAK,aAAa,OAAK;AACtB,eAAO,UAAU,EAAE,GAAG,EAAE;AAAA;AAG5B,iBAAW,KAAK,SAAS,GAAG;AAC1B,cAAM,IAAI,AAAG,OAAO;AACpB,UAAE,OAAO,KAAK,QAAQ,WAAW;AACjC,wBAAgB,EAAE,OAAO,MAAM,EAAE;AAAA;AAAA;AAGrC,oBAAgB,OAAO,KAAK,MAAM;AAClC,SAAK,YAAY,MAAM,UAAU;AAAA;AAAA,EAMnC,aAAmB;AACjB,UAAM,QAAQ,KAAK;AACnB,UAAM,UAAU,SAAS;AAEzB,UAAM,QAAQ,KAAK,MAAM;AAEzB,UAAM,UAAU,SACb,KAAK,OACL,QACA,OAAO,KACP,QAAQ,QAAQ;AAEnB,SAAK,YAAY,MAAM,UAAU;AAAA;AAAA;",
  "names": []
}
